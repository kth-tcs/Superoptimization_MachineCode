##### stoke search config file

--out synth_result.s # Path to write results to

--target bins/_Z3p01i.s # Path to the function to optimize
--init zero # Begin search from all nops 

--def_in "{ %rbp %rsp %rdi }" # The registers that are defined on entry to the target
--live_out "{ %rax }" # The registers that are live on exit from the target

--testcases test.tc # Path to testcase file
--training_set "{ 0 ... 31 }" # Testcases to use for measuring correctness during search
--test_set "{ 32 ... 1023 }"  # Testcases to use as holdout set for checking correctness

--distance hamming # Metric for measuring error between live-outs
--misalign_penalty 1 # Penalty for results that appear in the wrong location
--reduction sum # Method for summing errors across testcases
--sig_penalty 9999 # Score to assign to rewrites that produce non-zero signals

--cost "correctness" # Care only about correctness, no latencies

--cpu_flags "{ popcnt cmov abm bmi1 bmi2 }" # cpuid flags to use when proposing instructions

--global_swap_mass 0 # Proposal mass
--instruction_mass 1 # Proposal mass
--local_swap_mass 1 # Proposal mass
--opcode_mass 1 # Proposal mass
--operand_mass 1 # Proposal mass
--rotate_mass 0 # Proposal mass

--beta 1 # Search annealing constant
--initial_instruction_number 32 # The maximum number of instruction allowed in a rewrite

--statistics_interval 1000000 # Print statistics every 1m proposals
--timeout_iterations 16000000 # Propose 1m modifications before giving up
--failed_verification_action add_counterexample # Try adding a new testcase from the testset when search times out
--cycle_timeout 1000000 # Timeout up to 16 times before giving up

--strategy hold_out # Verify results using a larger hold out testcase set
